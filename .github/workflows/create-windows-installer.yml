name: Build Windows Installer

on:
    workflow_dispatch:
    push:
      paths:
        - version.windows

jobs:
  build-windows-installer:
    runs-on: windows-latest

    steps:
      - name: üßæ Checkout repo
        uses: actions/checkout@v4

      - name: üõ† Instalar m√≥dulo ps2exe para convertir .ps1 a .exe
        shell: pwsh
        run: |
          Install-Module -Name ps2exe -Scope CurrentUser -Force -AllowClobber

      - name: ‚öôÔ∏è Crear EXE desde start.ps1
        shell: pwsh
        run: |
          $root = "$PWD"
          $ps1 = Join-Path $root "Files\start.ps1"
          $exe = Join-Path $root "MedicalOfficeInstaller.exe"
          $icon = Join-Path $root "Installers\Windows\icon.ico"

          if (!(Test-Path $ps1)) {
            throw "‚ùå No se encontr√≥ start.ps1 en: $ps1"
          }

          if (!(Test-Path $icon)) {
            throw "‚ùå No se encontr√≥ el icono en: $icon"
          }

          Write-Host "‚úÖ Compilando $ps1 en $exe con √≠cono $icon"
          Invoke-ps2exe $ps1 $exe -iconFile $icon -noConsole

      - name: üì¶ Crear ZIP con carpeta Files/ + el .exe
        shell: pwsh
        run: |
          $root = "$PWD"
          $package = Join-Path $root "package"
          $sourceFolder = Join-Path $root "Files"
          $destFolder = Join-Path $package "Files"

          New-Item -Path $package -ItemType Directory -Force | Out-Null

          Write-Host "üìÅ Copiando carpeta Files a package/Files"
          Copy-Item -Path $sourceFolder -Destination $destFolder -Recurse -Force

          Write-Host "üìÅ Copiando EXE"
          Copy-Item -Path "$root\MedicalOfficeInstaller.exe" -Destination "$package" -Force

          $zipPath = Join-Path $root "Medical-Office.zip"
          Compress-Archive -Path "$package\*" -DestinationPath $zipPath

      - name: üöÄ Crear Release en GitHub
        uses: softprops/action-gh-release@v2
        with:
          name: Windows Installer
          tag_name: latest-windows
          files: |
            Medical-Office.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}