services:
  sql1:
    container_name: medicalofficesql
    image: ${GHCR_IMAGE_SQL}
    environment:
      - ACCEPT_EULA=${ACCEPT_EULA}
      - SA_PASSWORD=${SA_PASSWORD}
    ports:
      - "1433:1433"
    volumes:
      - medical_office_sql_data:/var/opt/mssql
    restart: always

  seq:
    image: datalust/seq:latest
    container_name: MedicalOfficeSeq
    environment:
      - ACCEPT_EULA=${ACCEPT_EULA}
    ports:
      - "5341:80"
    depends_on:
      - sql1
    restart: always

  medicalofficeapi:
    image: ${GHCR_IMAGE_API}
    container_name: medicalofficewebapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - sql1
      - seq
    command: /bin/sh -c "sleep 30 && dotnet Medical.Office.Api.dll"
    restart: always

  frontend:
    image: ${GHCR_IMAGE_FRONTEND}
    container_name: medicalofficewebclient
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    ports:
      - "3000:80"
    depends_on:
      - medicalofficeapi
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - medicalofficeapi
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    restart: always

  watchtower:
    image: ${GHCR_IMAGE_WATCHTOWER}
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${EMAIL_TO}

  sqlpad:
    image: sqlpad/sqlpad:latest
    container_name: sqlpad
    restart: always
    ports:
      - "3002:3000"
    environment:
      - SQLPAD_ADMIN=admin
      - SQLPAD_ADMIN_PASSWORD=admin
      - SQLPAD_AUTH_DISABLED=false
      - SQLPAD_APP_LOG_LEVEL=debug
      - SQLPAD_WEB_LOG_LEVEL=debug
      - SQLPAD_CONNECTIONS__sqlserver__name=MedicalOfficeDB
      - SQLPAD_CONNECTIONS__sqlserver__driver=sqlserver
      - SQLPAD_CONNECTIONS__sqlserver__host=sql1
      - SQLPAD_CONNECTIONS__sqlserver__port=1433
      - SQLPAD_CONNECTIONS__sqlserver__database=Medical.Office.SqlLocalDB
      - SQLPAD_CONNECTIONS__sqlserver__username=sa
      - SQLPAD_CONNECTIONS__sqlserver__password=${SA_PASSWORD}
    volumes:
      - sqlpad-data:/var/lib/sqlpad
    depends_on:
      - sql1

  dashy:
    image: lissy93/dashy
    container_name: dashy
    ports:
      - "4000:8080"
    volumes:
      - ./dashy/conf.yml:/app/user-data/conf.yml
    restart: unless-stopped

  sql-backup:
    image: mcr.microsoft.com/mssql-tools
    container_name: sql_backup
    depends_on:
      - sql1
    volumes:
      - ./backup.sh:/backup.sh
      - sql_backups:/backups
    environment:
      - SA_PASSWORD=${SA_PASSWORD}
    entrypoint: [ "/bin/sh", "/backup.sh" ]
    restart: always

  metabase:
    image: metabase/metabase
    container_name: metabase
    ports:
      - "3003:3000"
    depends_on:
      - sql1
    restart: always
    volumes:
      - metabase-data:/metabase-data

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - "8088:80"     # HTTP
      - "8181:81"     # Panel de administraci√≥n web
      - "4443:443"   # HTTPS
    volumes:
      - nginx_data:/data
      - nginx_letsencrypt:/etc/letsencrypt

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:lts
    restart: always
    ports:
      - "9000:9000"  # Solo HTTP
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data





volumes:
  medical_office_sql_data:
  grafana-storage:
  sqlpad-data:
  sql_backups:
  metabase-data:
  nginx_data:
  nginx_letsencrypt:
  portainer_data:

